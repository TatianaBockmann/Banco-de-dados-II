
31.03.25

create table empresa
(cod_empresa number(3) not null,
nome_empresa varchar2 (150) not null,
nome_fantasia varchar2(150),
data_abertura date not null,
cnpj varchar2(45) not null,
constraint empresa_pk primary key (cod_empresa));

create table departamento
(cod_departamento number(3) not null,
cod_empresa number(3) not null,
descricao_departamento varchar2(100) not null,
constraint departamento_pk primary key (cod_departamento),
constraint depto_empresa_fk foreign key (cod_empresa) references empresa(cod_empresa)
);
CREATE TABLE FUNCIONARIO
( COD_FUNCIONARIO NUMBER(5,0),
NOME_FUNCIONARIO VARCHAR2(100),
COD_DEPARTAMENTO NUMBER(3,0),
COD_EMPRESA NUMBER(3,0),
DATA_CADASTRO DATE,
DATA_NASCIMENTO DATE,
constraint funcionario_pk primary key (cod_funcionario),
constraint funcionario_depto_fk foreign key (cod_departamento) references departamento(cod_departamento),
constraint funcionario_empresa_fk foreign key (cod_empresa) references empresa(cod_empresa) );

create table salario
( cod_funcionario number(5) not null,
data_salario date not null,
valor_salario number(12,2) not null,
constraint salario_pk primary key (cod_funcionario, data_salario),
constraint salario_func_fk foreign key (cod_funcionario) references funcionario(cod_funcionario));

insert into empresa values (1,'JNC' , 'Janelas e Esquadrias JNC', to_date('01/01/2014','dd/mm/rrrr'), '98977668868');
insert into empresa values (2,'Bartiole' , 'Hipermercado Bartiole', to_date('01/01/2013','dd/mm/rrrr'), '45677776677');
insert into empresa values (3,'Gerda' , 'Gerda Marmitaria e Cia', to_date('01/03/2014','dd/mm/rrrr'), '000987990099');
insert into empresa values (4,'Montanhismo AG' , 'Montanhismno Agência de Viagens', to_date('12/03/2014','dd/mm/rrrr'), '98977668868');

insert into departamento values (1, 1, 'RH');
insert into departamento values (2, 1, 'Financeiro');
insert into departamento values (3, 1, 'Vendas');
insert into departamento values (4, 1, 'Produção ');
insert into departamento values (5, 1, 'Marketing');
insert into departamento values (6, 2, 'RH');
insert into departamento values (7, 2, 'Produção');
insert into departamento values (8, 2, 'Vendas');
insert into departamento values (9, 3, 'RH');
insert into departamento values (10, 3, 'Vendas');
insert into departamento values (11, 4, 'RH');
insert into departamento values (12, 4, 'Financeiro');

insert into funcionario values (1, 'Joao da Silva Sauro', 1, 1, to_date( '01/01/2013','dd/mm/rrrr'), to_date('21/01/1980','dd/mm/rrrr'));
insert into funcionario values (2, 'Maria da Luz Cardoso', 3, 1, to_date('01/03/2013','dd/mm/rrrr'), to_date('10/01/1988','dd/mm/rrrr'));
insert into funcionario values (3, 'Joao da Silva Sauro', 2, 1, to_date('01/01/2011','dd/mm/rrrr'), to_date('01/04/2005','dd/mm/rrrr'));
insert into funcionario values (4, 'Pedro Alcântara', 1, 1, to_date('01/03/2013','dd/mm/rrrr'), to_date('01/03/1999','dd/mm/rrrr'));
insert into funcionario values (5, 'Joao da Silva Sauro', 1, 1,to_date( '01/01/2013','dd/mm/rrrr'), to_date('01/01/1981','dd/mm/rrrr'));
insert into funcionario values (6, 'Armando Silva', 6, 2, to_date('01/01/2013','dd/mm/rrrr'), to_date('01/12/1987','dd/mm/rrrr'));
insert into funcionario values (7, 'Joao Alves', 6, 2, to_date('10/09/2013','dd/mm/rrrr'), to_date('22/11/1990','dd/mm/rrrr'));
insert into funcionario values (8, 'Pedro Mariano', 7, 2, to_date('21/09/2012','dd/mm/rrrr'), to_date('01/01/1910','dd/mm/rrrr'));
insert into funcionario values (9, 'Wilison Azevedo Moura', 8, 2, to_date('01/09/2013','dd/mm/rrrr'), to_date('15/08/1989','dd/mm/rrrr'));
insert into funcionario values (10, 'Oscar Lorosa de Marco', 8, 2, to_date('01/01/2014','dd/mm/rrrr'), to_date('11/11/1975','dd/mm/rrrr'));
insert into funcionario values (11, 'Uelington Morgan Frietzviller', 9, 3, to_date('01/10/2013','dd/mm/rrrr'), to_date('01/07/1986','dd/mm/rrrr'));
insert into funcionario values (12, 'Maria Joaquim Barboa Alvino', 9, 3, to_date('12/11/2013','dd/mm/rrrr'), to_date('11/07/1986','dd/mm/rrrr'));
insert into funcionario values (13, 'Oscalina Moriati Alavan', 10, 3, to_date('01/01/2013','dd/mm/rrrr'), to_date('01/01/1988','dd/mm/rrrr'));
insert into funcionario values (14, 'Portinari Muri Per Si', 10, 3, to_date('01/12/2013','dd/mm/rrrr'), to_date('01/10/1981','dd/mm/rrrr'));
insert into funcionario values (15, 'Carlos Henrique Motz',11, 4, to_date('11/08/2013','dd/mm/rrrr'), to_date('01/01/1997','dd/mm/rrrr'));
insert into funcionario values (16, 'Wilison Morta de Si', 12, 4, to_date('12/08/2013','dd/mm/rrrr'), to_date('12/07/1998','dd/mm/rrrr'));

insert into salario values (1, to_date( '01/01/2013','dd/mm/rrrr'), 1000);
insert into salario values (1, to_date( '01/01/2014','dd/mm/rrrr'), 2000);
insert into salario values (1, to_date( '01/01/2015','dd/mm/rrrr'), 3000);

insert into salario values (2, to_date( '01/04/2013','dd/mm/rrrr'), 1100);
insert into salario values (2, to_date( '01/07/2014','dd/mm/rrrr'), 2200);
insert into salario values (2, to_date( '01/01/2015','dd/mm/rrrr'), 3300);


--1.Faça uma função que retorna o nome do departamento e a quantidade de funcionários. Passe como parâmetro o código do departamento.

Create or replace function fn_cod_departamento
(P_cod_departamento in Number)  
Return Varchar2  
IS  
    Cursor C_cod_departamento IS  
    SELECT departamento.cod_departamento, count(funcionario.cod_funcionario) qtidade
    FROM departamento, funcionario
    WHERE funcionario.cod_departamento = departamento.cod_departamento
    and funcionario.cod_funcionario = P_cod_departamento
    group by departamento.cod_departamento;
       
 
R_cod_departamento C_cod_departamento%ROWTYPE;  
 
BEGIN  
OPEN C_cod_departamento;
        FETCH C_cod_departamento INTO R_cod_departamento;  
		if c_cod_departamento%notfound THEN return('não encontrou');
		end if;
CLOSE C_cod_departamento;  

Return ( R_cod_departamento.cod_departamento ||' '|| R_cod_funcionario.qtidade );
    
END;

select FN_departamento(6) from dual;
select cod_departamento, fn_cod_departamento(cod_departamento) from departamento;

--2. Mostre o nome do funcionário, o nome do departamento e da empresa, passe como parâmetro o código do funcionário.

create or replace function exercicio_2
(P_cod_funcionario in Number)  
Return Varchar2  
IS  
        Cursor C_A IS  
                 SELECT empresa.NOME_EMPRESA,
                 departamento.DESCRICAO_DEPARTAMENTO,
                 funcionario.NOME_FUNCIONARIO
    	   FROM empresa, departamento, funcionario
   	   WHERE empresa.COD_EMPRESA = departamento.COD_empresa
   	   and   departamento.COD_DEPARTAMENTO = funcionario.cod_departamento
   	   and   funcionario.COD_FUNCIONARIO = P_cod_funcionario;
   
R_A C_A%ROWTYPE;  

BEGIN  
OPEN C_A;
        FETCH C_A INTO R_A;  
CLOSE C_A;  

Return ( R_A.nome_empresa||' , '||R_A.DESCRICAO_DEPARTAMENTO||' ,'||R_A.NOME_FUNCIONARIO );
END;

--3. Usando um select com subconsulta, selecione o último salário. Use a função MAX (em vez de Count)

select salario.valor_salario from salario
     WHERE salario.COD_FUNCIONARIO = 2
     and   DATA_SALARIO = (select max(salariosub.data_salario)
                           from  SALARIO salariosub
                           where salariosub.COD_funcionario = salario.COD_FUNCIONARIO
                             );

--4. Utilizando o select do exercício 3, faça uma função que retorna o nome do funcionário e seu último salário. Passe como 
parâmetro o código do funcionário.

create or replace function exercicio_2
(P_cod_funcionario in Number)  
Return Varchar2  
IS  
        Cursor C_A IS  
                 select salario.valor_salario, funcionario.NOME_FUNCIONARIO
                 from salario, funcionario
     	  WHERE salario.COD_FUNCIONARIO = P_cod_funcionario
    	  and   funcionario.COD_FUNCIONARIO = salario.COD_FUNCIONARIO
   	  and   DATA_SALARIO = (select max(salariosub.data_salario)
                from  SALARIO salariosub
                where salariosub.COD_funcionario = salario.COD_FUNCIONARIO
                             );
   
R_A C_A%ROWTYPE;  

BEGIN  
OPEN C_A;
        FETCH C_A INTO R_A;  
CLOSE C_A;  

Return ( R_A.NOME_FUNCIONARIO||' '||R_A.valor_salario );
END;


select EXERCICIO_2(2) from dual;


