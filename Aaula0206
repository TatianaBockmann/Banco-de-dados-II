CREATE TABLE PRODUTO
   (    "ID_PRODUTO" NUMBER(5,0),
    "DESCR_PRODUTO" VARCHAR2(100 BYTE),
    constraint PRODUTO_pk primary key (ID_PRODUTO));

CREATE TABLE ESTOQUE
   ( "ID_ESTOQUE" NUMBER(5,0),
    "ID_PRODUTO" NUMBER(5,0),
    QTD number(12,2),
    constraint ESTOQUE_pk primary key (ID_ESTOQUE, ID_PRODUTO),
	constraint ESTOQUE_PRODUTO_fk foreign key (ID_PRODUTO) references PRODUTO(ID_PRODUTO));

CREATE TABLE MOVESTOQUE
   (    "ID_MOVESTOQUE" NUMBER(5,0),
    "ID_ESTOQUE" NUMBER(5,0),
    "ID_PRODUTO" NUMBER(5,0),
    QTD_MOV number(12,2),
    USUARIO VARCHAR2(100),
    TP_MOV VARCHAR2(1),
    constraint MOVESTOQUE_pk primary key (ID_MOVESTOQUE),
	constraint MOVESTOQUE_ESTOQUE_fk foreign key (ID_ESTOQUE, ID_PRODUTO) references ESTOQUE(ID_ESTOQUE, ID_PRODUTO),
	constraint MOVESTOQUE_PRODUTO_fk foreign key (ID_PRODUTO) references PRODUTO(ID_PRODUTO));

Insert into PRODUTO (ID_PRODUTO, DESCR_PRODUTO) values ('1','BARRACA');
Insert into PRODUTO (ID_PRODUTO, DESCR_PRODUTO) values ('2','BARCO');
Insert into PRODUTO (ID_PRODUTO, DESCR_PRODUTO) values ('3','CADEIRA');
Insert into PRODUTO (ID_PRODUTO, DESCR_PRODUTO) values ('4','MESA');

Insert into ESTOQUE (ID_ESTOQUE, ID_PRODUTO, QTD) values ('1', '4','0');
Insert into ESTOQUE (ID_ESTOQUE, ID_PRODUTO, QTD) values ('1', '3', '0');
Insert into ESTOQUE (ID_ESTOQUE, ID_PRODUTO, QTD) values ('1', '2','0');
Insert into ESTOQUE (ID_ESTOQUE, ID_PRODUTO, QTD) values ('1', '1','0');


--Criar na tabela MovEstoque uma trigger que a cada inserção aumenta o valor do estoque. Use o Tp_Mov = 'E'.

CREATE OR REPLACE TRIGGER trg_insercao_movestoque
AFTER INSERT ON MOVESTOQUE
FOR EACH ROW
BEGIN
    -- Verifica se o tipo de movimento é 'E' (entrada)
    IF :NEW.TP_MOV = 'E' THEN
        -- Atualiza a quantidade no estoque
        UPDATE ESTOQUE
        SET QTD = QTD + :NEW.QTD_MOV
        WHERE ID_ESTOQUE = :NEW.ID_ESTOQUE
          AND ID_PRODUTO = :NEW.ID_PRODUTO;
    END IF;
END;

INSERT INTO MOVESTOQUE (
    ID_MOVESTOQUE, ID_ESTOQUE, ID_PRODUTO, QTD_MOV, USUARIO, TP_MOV) VALUES ( 1, 1, 1, 10, 'admin', 'E');

SELECT * FROM ESTOQUE;
SELECT * FROM MOVESTOQUE;


✅ Você deve fazer a inserção na tabela MOVESTOQUE!
Por quê?
Porque:

O trigger trg_insercao_movestoque foi criado para atualizar automaticamente a tabela ESTOQUE após um INSERT em MOVESTOQUE, 
quando o tipo de movimento (TP_MOV) for 'E' (entrada).

A tabela ESTOQUE já está criada com os produtos e suas quantidades iniciais zeradas (QTD = 0).

✔ Exemplo de inserção correta na MOVESTOQUE
Suponha que você quer dar entrada de 10 unidades de produto 1 (BARRACA) no estoque 1:

sql
Copiar
Editar
INSERT INTO MOVESTOQUE (
    ID_MOVESTOQUE, ID_ESTOQUE, ID_PRODUTO, QTD_MOV, USUARIO, TP_MOV
) VALUES (
    1, 1, 1, 10, 'admin', 'E'
);
O que acontece:
Esse comando insere uma movimentação de entrada (TP_MOV = 'E') de 10 unidades.

O trigger trg_insercao_movestoque vai automaticamente atualizar a tabela ESTOQUE:

Vai somar 10 à quantidade do produto 1 no estoque 1.

Resultado final: a QTD no ESTOQUE para ID_PRODUTO = 1 será 10.

❗Observações:
O trigger só trata movimentos de entrada (TP_MOV = 'E'). Se quiser tratar saídas (TP_MOV = 'S'), precisa expandir o trigger.

Certifique-se de que os IDs que está inserindo em MOVESTOQUE já existam nas tabelas relacionadas (ESTOQUE e PRODUTO), senão 
ocorrerá erro de chave estrangeira.
